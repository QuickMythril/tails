#!/usr/bin/env python3
'''
Wrapper on /usr/bin/tor-browser.

See netnsdrop module for a better understanding of how it works and its assumptions.
'''
import sys
import os
import logging
import sh

from tailslib.netnsdrop import run


def main():
    if os.getuid() == 1000:
        # Ensure that the xdg-document-portal service has started, because if it
        # hasn't started *before* the bwrap command is executed, binding
        # /run/user/1000/doc/by-app/$APP_ID fails.
        sh.dbus_send(
            "--session",
            "--print-reply=literal",
            "--dest=org.freedesktop.portal.Documents",
            "/org/freedesktop/portal/documents",
            "org.freedesktop.portal.Documents.GetMountPoint"
        )

    env = {
        "TOR_BROWSER_SKIP_OFFLINE_WARNING": os.getenv(
            "TOR_BROWSER_SKIP_OFFLINE_WARNING", "no"
        )
    }
    run(
        "/usr/bin/tor-browser",
        "tbb",
        "/usr/local/bin/tor-browser",
        extra_env=env,
        extra_args=sys.argv[1:],
        app_id="torbrowser.Browser.firefox",
        flatpak_info="/usr/share/tails/tor-browser/.flatpak-info",
    )


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    main()
