#!/bin/sh

# Import try_for()
. /usr/local/lib/tails-shell-library/common.sh
# Import tor_control_getconf(), tor_control_getinfo(), tor_set_in_torrc()
. /usr/local/lib/tails-shell-library/tor.sh

if [ "${1}" != 0 ] && [ "${1}" != 1 ]; then
    echo "error: bad argument: ${1}" >&2
    exit 1
fi

if [ "$(tor_control_getconf Sandbox)" = "${1}" ]; then
    exit 0
fi

systemctl stop tor@default.service

tor_set_in_torrc Sandbox "${1}"
sed -i '/^ClientTransportPlugin /d' /etc/tor/torrc
if [ "${1}" = 0 ]; then
    tor_set_in_torrc ClientTransportPlugin 'obfs2,obfs3,obfs4,meek_lite exec /usr/bin/obfs4proxy managed'
fi

systemctl start tor@default.service

# Block until controller is available, but with a timeout to not block
# forever, although callers of this script will likely reach a bad
# state if the controller is dead.
TIMEOUT=10
try_for ${TIMEOUT} '[ -n "$(tor_control_getinfo version)" ]' 0.1
