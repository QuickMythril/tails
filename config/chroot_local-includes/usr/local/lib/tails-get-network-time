#!/usr/bin/python3

# On success, prints the value of the date header in ISO 8601 format.

# On supported failures, print the type of failure to stdout,
# and exit with a well-defined return code.

import email.utils
import pycurl
import sys
from io import BytesIO
from pathlib import Path

RETURN_CODE = {
    "missing-date-header": 2,
    "malformed-date-header": 3,
    "http-failure": 4,
    "captive-portal": 5,
}


def fail(error: str):
    print(error)
    sys.exit(RETURN_CODE[error])


headers = {}


def header_cb(header_line):
    # HTTP standard specifies that headers are encoded in iso-8859-1.
    header_line = header_line.decode('iso-8859-1')

    if ':' not in header_line:
        return

    name, value = header_line.split(':', 1)
    name = name.strip()
    value = value.strip()
    name = name.lower()
    headers[name] = value


def curl_client(url: str, buffer: BytesIO) -> pycurl.Curl:
    c = pycurl.Curl()
    c.setopt(c.URL, url)
    c.setopt(c.WRITEDATA, buffer)
    c.setopt(c.HEADERFUNCTION, header_cb)
    c.setopt(c.HTTPHEADER, ["Connection: close"])
    c.setopt(c.IPRESOLVE, c.IPRESOLVE_V4)
    return c


def main():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("--url-file",
                        type=str,
                        default="/etc/tails-get-network-time-url",
                        action="store")
    args = parser.parse_args()

    url = Path(args.url_file).read_text().rstrip()
    buffer = BytesIO()
    c = curl_client(url, buffer)

    try:
        c.perform()
        decoded_body = buffer.getvalue().decode('utf-8')
        code = c.getinfo(c.RESPONSE_CODE)
    except pycurl.error:
        fail('http-failure')
    finally:
        c.close()

    if code == 200:
        if decoded_body == 'OK':
            try:
                date = headers['date']
            except KeyError:
                fail('missing-date-header')
            try:
                dt = email.utils.parsedate_to_datetime(date)
            except Exception:
                fail('malformed-date-header')
            print(dt.isoformat())
            sys.exit(0)

        else:
            fail('captive-portal')
    else:
        fail('http-failure')


if __name__ == '__main__':
    main()
