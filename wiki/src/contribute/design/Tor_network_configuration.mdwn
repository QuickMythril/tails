[[!meta title="Tor network configuration"]]

[[!toc levels=2]]

# Rationale

## Circumventing Tor censorship

Certain networks are restricted in ways that prevent Tor from
connecting properly without further configuration. Examples are:

* Egress port filtering (solved with `ReachableAddresses`).

* The Internet is only reachable via a proxy (solved with the `*Proxy`
  options).

* Tor is explicitly blocked (the Tor people like the term "censored"),
  which can be circumvented by using Tor bridges (solved with
  `UseBridges`, `Bridge`, and possibly `ClientTransportPlugin`).

## Trying to hide the fact one is using Tor

On the one hand, hiding the fact one is using Tor is often a side effect of
anti-censorship tools, such as Pluggable Transports: a censor who could detect
Tor usage could also block it. On the other hand, this is _not_ the threat model
for which anti-censorship tools such as Pluggable Transports are developed, so
understandably, Tor Browser decided not to advertize this property to its
users, and offers no guarantee in this respect.

Tails takes a different stance than Tor Browser on this topic: while Tor Browser
focuses on censorship circumvention, Tails _also_ aims to support other use
cases, in which the user needs to be aware that using Tor might be risky for
them. We want to help Tails users take this into account and choose a safer
option whenever possible. For example:

 - surveillance at home, at work, or at school, that alerts the user's
   adversaries about suspicious network activity

   This applies for example to one of our personas,
   [[Kim|contribute/personas/kim]], and to domestic violence situations.

 - regions where very few people use Tor, and the mere fact they're using Tor
   might be used to single them out as persons of interest and to locate them

Here's why we choose a different approach than Tor:

 - Generally speaking, Tails and Tor Browser complement each other by addressing
   different use cases and threat models. This is one of these cases: we believe
   Tails is making a greater difference by trying to better support users that
   Tor Browser won't.

 - When the user chooses not to try to hide the fact they're using Tor, we try
   our best to connect to Tor automatically. The way we do it may make it easier
   for an adversary to tell that the user is using Tails. For details, see our
   design documentation about [non-Tor
   traffic](contribute/design/Tor_enforcement). Since there are much fewer Tails
   users than Tor Browser users, this risk of detection matters even more in our
   case: identified Tails users may look more suspicious and would be easier to
   track down.

 - While we support Tor Browser's goal to fight against the narrative of Tor
   being for criminals or suspicious to use,
   we prioritize being pragmatic regarding the threats
   actually faced by our users in the world as it is today.

   Regardless of what the pervasive narrative around Tor becomes,
   abusive husbands might keep finding it suspicious that their partner or child is
   using Tor.

   We are confident this different stance of ours won't sabotage the Tor
   Project's efforts in this respect, because our impact on public discourse is
   so much smaller than theirs.

 - Even if we can't offer perfect protection against all possible adversaries, we
   are confident that we make our users safer against this threat at least
   against some adversaries that matter, such as abusive husbands who use less
   sophisticated, out-of-the-box network monitoring solutions such as
   parental control.

To achieve these goals, without over-promising the benefits of anti-censorship
tools, we're doing our best to keep ourselves up-to-date regarding the current
state of detection risks associated with the various ways to connect to Tor.
Accordingly, we are prepared to adjust the implementations offered to our users
when they choose to hide the fact they're using Tor. We are conscious that at
some point, we may have to temporarily or permanently disable this option,
because none of the available ways to connect to Tor offers a safety level
adequate to the situations we have in mind.

# Implementation

TODO: this is outdated ([[!tails_ticket 18360]]).

In the Welcome Screen the "Network Configuration" section contains a
non-default option called "My Internet Connection is
censored...". When activated, the following deviations from normal
Tails behaviour occur, in order:

0. Tails sessions begin with `DisableNetwork 1` in torrc so Tor will not
   connect to the network without user intervention.

0. The `tor` process is configured to not use the system resolver
   (which is `tor` itself â‡’ catch-22) but the DNS server obtained by
   NetworkManager instead. This enables the use of hostnames for
   proxies and pluggable transports (which is required for e.g. Meek).

0. When we connect to the network, a NetworkManager hook starts Tor
   Launcher in the background, i.e. non-blocking.

0. [[Time_syncing]] waits until the user has committed their
   configuration via Tor Launcher and then does its usual magic to
   ensure that Tor bootstraps even if the clock was incorrect. That is
   the reason why we have to take the more complex approach of
   starting Tor Launcher in parallel.

We install Tor Launcher by extracting it from the Tor Browser tarball,
when building the ISO image.

Scripts:

* [[!tails_gitweb config/chroot_local-hooks/10-tbb]] (installs Tor Launcher)

* [[!tails_gitweb config/chroot_local-includes/usr/local/sbin/tails-tor-launcher]]
  (Wrapper for Tor Launcher)

* [[!tails_gitweb config/chroot_local-includes/etc/NetworkManager/dispatcher.d/10-tor.sh]]
  (Tor Launcher is started here)

* [[!tails_gitweb config/chroot_local-includes/etc/NetworkManager/dispatcher.d/20-time.sh]]
  (Time syncing)

* [[!tails_gitweb config/chroot_local-includes/lib/systemd/system/tor@default.service.d/writable-etc-tor.conf]]
  and [[!tails_gitweb config/chroot_local-patches/apparmor-adjust-tor-profile.diff]]
  (allow Tor to modify its configuration)
